# Port
server.port = 8090

# New DataSource
# DataSource 정보를 읽어들일 때 datasource 하위의 hikari를 읽어들이지 않기 때문에
# 데이터소스 관련된 정보들을 hikari 내부로 옮겨서 새로 만든다.
# 데이터베이스 URL 경우도 HikariCP는 jdbc-url이라는 지정된 이름(키)으로 받기 때문에 url에서 jdbc-url로 변경.
spring.datasource.hikari.jdbc-url = jdbc:mariadb://43.202.219.254:3306/ground?autoReconnect=true&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8
spring.datasource.hikari.username = root
spring.datasource.hikari.password = Rtgiu789!!od123sfnk+
spring.datasource.hikari.driver-class-name = org.mariadb.jdbc.Driver

# Thymeleaf
# cache 기능은 서버 내부에 cache 저장을 못하도록 끄면 좋음. 수정 시 매번 프로젝트를 재시작 안해도 됨.
spring.thymeleaf.prefix = classpath:templates/thymeleaf/
spring.thymeleaf.check-template-location = true
spring.thymeleaf.suffix = .html
spring.thymeleaf.mode = HTML
spring.thymeleaf.cache = false
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.enabled=true
spring.thymeleaf.check-template=true


# 언더바 자동변경 방지

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.mvc.static-path-pattern=/webapp/**
